{"meta":{"title":"uupeter的小站","subtitle":"uupeter的小站","description":"这里是uupeter的小站，欢迎光临！","author":"uupeter","url":"http://example.com","root":"/hexoblog_gh/"},"pages":[{"title":"关于","date":"2023-11-26T08:41:07.342Z","updated":"2023-11-26T08:41:07.342Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"1234567#include&lt;bits/stdc++.h&gt;using namespace std;int main()&#123; cout&lt;&lt;&quot;Hello World!&quot;&lt;&lt;endl; return 0;&#125; 你好，世界！🗺️"},{"title":"并查集","date":"2023-11-25T10:32:57.353Z","updated":"2023-11-25T10:32:57.353Z","comments":true,"path":"coding/disj_set_union.html","permalink":"http://example.com/coding/disj_set_union.html","excerpt":"","text":"基础并查集【带路径压缩】 123456789101112131415161718192021222324252627void init()&#123; for(int i=1;i&lt;=n;i++) &#123; fa[i]=i; &#125;&#125;long long find(long long x)&#123; if(fa[x]==x) &#123; return x; &#125; else &#123; return fa[x]=find(fa[x]); &#125;&#125;void merge(long long x,long long y)&#123; x=find(x); y=find(y); if(x!=y) &#123; fa[x]=y; &#125;&#125; 基础并查集练习： 洛谷 P1551 亲戚"},{"title":"OI专区","date":"2023-10-24T13:05:32.000Z","updated":"2023-10-24T13:06:25.180Z","comments":true,"path":"coding/index.html","permalink":"http://example.com/coding/index.html","excerpt":"","text":"ddd."},{"title":"模板区","date":"2023-11-04T12:32:53.787Z","updated":"2023-11-04T12:32:53.787Z","comments":true,"path":"coding/templates.html","permalink":"http://example.com/coding/templates.html","excerpt":"","text":"常用模板 默认模板 1234567#include&lt;bits/stdc++.h&gt;using namespace std;int main()&#123; return 0;&#125; 知识点 基础算法 二分 记住：要满足单调性。 在整数域上二分 12345678910111213141516long long l=,r=;while(l&lt;=r)&#123; long long mid=(l+r)&gt;&gt;1; if(check(mid)) &#123; ans=mid; l=mid+1; //r=mid-1; &#125; else &#123; r=mid-1; //l=mid+1; &#125;&#125; 在实数域上二分 1234567891011121314double l=,r=;for(int i=1;i&lt;=100;i++)&#123; double mid=(l+r)/2; if(check(mid)) &#123; r=mid; ans=mid; &#125; else &#123; l=mid; &#125;&#125; 二分练习： 字符串 图论 数据结构 并查集 基础并查集【带路径压缩】 123456789101112131415161718192021222324252627void init()&#123; for(int i=1;i&lt;=n;i++) &#123; fa[i]=i; &#125;&#125;long long find(long long x)&#123; if(fa[x]==x) &#123; return x; &#125; else &#123; return fa[x]=find(fa[x]); &#125;&#125;void merge(long long x,long long y)&#123; x=find(x); y=find(y); if(x!=y) &#123; fa[x]=y; &#125;&#125; 并查集练习： 数论 逆元 线性预处理逆元： 123456789void pre(long long mod)&#123; inv[0]=0; inv[1]=1; for(int i=2;i&lt;maxn;i++) &#123; inv[i]=(mod-mod/i)*inv[mod%i]%mod; &#125;&#125; 逆元求组合数 or 排列数： 预处理： 12345678910111213141516void pre()&#123; inv[0]=0; inv[1]=1; for(int i=2;i&lt;maxn;i++) &#123; inv[i]=(mod-mod/i)%mod*inv[mod%i]%mod; &#125; facinv[0]=1; fac[0]=1; for(int i=1;i&lt;maxn;i++) &#123; fac[i]=fac[i-1]%mod*i%mod; facinv[i]=facinv[i-1]%mod*inv[i]%mod; &#125;&#125; 组合数求法：Cmn=n!(n−m)!m!\\large C_{m}^{n}=\\frac{n!}{(n-m)!m!}Cmn​=(n−m)!m!n!​ 12345678long long C(long long n,long long m)&#123; if(m&lt;0||m&gt;n) &#123; return 0; &#125; return fac[n]%mod*facinv[n-m]%mod*facinv[m]%mod;&#125; 排列数求法：Amn=n!(n−m)!\\large A_{m}^{n}=\\frac{n!}{(n-m)!}Amn​=(n−m)!n!​ 12345678long long A(long long n,long long m)&#123; if(m&lt;0||m&gt;n) &#123; return 0; &#125; return fac[n]%mod*facinv[n-m]%mod;&#125; 逆元练习： 整除分块 模板 输出 n 除以所有正整数的商，以及每个商出现的个数，如果商为 0，则不用输出。 123456789101112#include&lt;bits/stdc++.h&gt;using namespace std;int main()&#123; long long n; cin&gt;&gt;n; for(int l=1,r;l&lt;=n;l=r+1) &#123; r=n/(n/l); cout&lt;&lt;(n/l)&lt;&lt;&quot; &quot;&lt;&lt;r-l+1&lt;&lt;endl; &#125;&#125; 整除分块练习：洛谷 P2261 [CQOI2007] 余数求和 组合 斯特林数 公式： 斯特林数练习：iai 413 斯特林数 其他"},{"title":"","date":"2023-10-24T14:14:08.930Z","updated":"2023-10-24T14:14:08.930Z","comments":true,"path":"css/title.css","permalink":"http://example.com/css/title.css","excerpt":"","text":"/* 文章页H1-H6图标样式效果 */ h1::before, h2::before, h3::before, h4::before, h5::before, h6::before { -webkit-animation: ccc 1.6s linear infinite ; animation: ccc 1.6s linear infinite ; } @-webkit-keyframes ccc { 0% { -webkit-transform: rotate(0deg); transform: rotate(0deg) } to { -webkit-transform: rotate(-1turn); transform: rotate(-1turn) } } @keyframes ccc { 0% { -webkit-transform: rotate(0deg); transform: rotate(0deg) } to { -webkit-transform: rotate(-1turn); transform: rotate(-1turn) } } /* 标题颜色 */ #content-inner.layout h1::before { color: #ef50a8 ; margin-left: -1.55rem; font-size: 1.3rem; margin-top: -0.23rem; } #content-inner.layout h2::before { color: #fb7061 ; margin-left: -1.35rem; font-size: 1.1rem; margin-top: -0.12rem; } #content-inner.layout h3::before { color: #ffbf00 ; margin-left: -1.22rem; font-size: 0.95rem; margin-top: -0.09rem; } #content-inner.layout h4::before { color: #a9e000 ; margin-left: -1.05rem; font-size: 0.8rem; margin-top: -0.09rem; } #content-inner.layout h5::before { color: #57c850 ; margin-left: -0.9rem; font-size: 0.7rem; margin-top: 0.0rem; } #content-inner.layout h6::before { color: #5ec1e0 ; margin-left: -0.9rem; font-size: 0.66rem; margin-top: 0.0rem; } /* 标题hover样式 */ #content-inner.layout h1:hover, #content-inner.layout h2:hover, #content-inner.layout h3:hover, #content-inner.layout h4:hover, #content-inner.layout h5:hover, #content-inner.layout h6:hover { color: #49b1f5 ; } #content-inner.layout h1:hover::before, #content-inner.layout h2:hover::before, #content-inner.layout h3:hover::before, #content-inner.layout h4:hover::before, #content-inner.layout h5:hover::before, #content-inner.layout h6:hover::before { color: #49b1f5 ; -webkit-animation: ccc 3.2s linear infinite ; animation: ccc 3.2s linear infinite ; }"},{"title":"所有标签","date":"2023-11-26T08:40:20.210Z","updated":"2023-11-26T08:40:20.210Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"所有分类","date":"2023-11-26T08:36:17.373Z","updated":"2023-11-26T08:36:17.373Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"","date":"2023-11-05T09:48:35.071Z","updated":"2023-11-05T09:48:35.071Z","comments":true,"path":"tools/editormd.html","permalink":"http://example.com/tools/editormd.html","excerpt":"","text":"### 关于 Editor.md Editor.md 是一款开源的、可嵌入的 Markdown 在线编辑器（组件），基于 CodeMirror、jQuery 和 Marked 构建。 $(function() { var editor = editormd(\"test-editor\", { // width : \"100%\", // height : \"100%\", path : \"editormd/lib/\" }); });"}],"posts":[{"title":"Hello World","slug":"hello-world - 副本","date":"2023-11-26T02:16:59.000Z","updated":"2023-11-26T02:23:00.593Z","comments":true,"path":"2023/11/26/hello-world - 副本/","link":"","permalink":"http://example.com/2023/11/26/hello-world%20-%20%E5%89%AF%E6%9C%AC/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new &quot;My New Post&quot; More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world - 副本 - 副本","date":"2023-11-26T02:16:59.000Z","updated":"2023-11-26T03:14:59.799Z","comments":true,"path":"2023/11/26/hello-world - 副本 - 副本/","link":"","permalink":"http://example.com/2023/11/26/hello-world%20-%20%E5%89%AF%E6%9C%AC%20-%20%E5%89%AF%E6%9C%AC/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new &quot;My New Post&quot; More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment","categories":[],"tags":[{"name":"hi","slug":"hi","permalink":"http://example.com/tags/hi/"},{"name":"ss","slug":"ss","permalink":"http://example.com/tags/ss/"},{"name":"skdj","slug":"skdj","permalink":"http://example.com/tags/skdj/"},{"name":"skjd","slug":"skjd","permalink":"http://example.com/tags/skjd/"},{"name":"你好","slug":"你好","permalink":"http://example.com/tags/%E4%BD%A0%E5%A5%BD/"}]},{"title":"Hello World","slug":"hello-world","date":"2023-11-26T02:16:59.000Z","updated":"2023-11-26T02:23:00.593Z","comments":true,"path":"2023/11/26/hello-world/","link":"","permalink":"http://example.com/2023/11/26/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new &quot;My New Post&quot; More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"Latex 测试","slug":"latex-test","date":"2023-10-22T05:52:18.618Z","updated":"2023-10-22T06:05:12.234Z","comments":true,"path":"2023/10/22/latex-test/","link":"","permalink":"http://example.com/2023/10/22/latex-test/","excerpt":"","text":"O(n)→2×1062×107O(n) \\rightarrow 2 \\times 10^6 2 \\times 10^7O(n)→2×1062×107 O(nlogn)→2×105O(nlogn) \\rightarrow 2 \\times 10^5O(nlogn)→2×105","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"hi","slug":"hi","permalink":"http://example.com/tags/hi/"},{"name":"ss","slug":"ss","permalink":"http://example.com/tags/ss/"},{"name":"skdj","slug":"skdj","permalink":"http://example.com/tags/skdj/"},{"name":"skjd","slug":"skjd","permalink":"http://example.com/tags/skjd/"},{"name":"你好","slug":"你好","permalink":"http://example.com/tags/%E4%BD%A0%E5%A5%BD/"}]}